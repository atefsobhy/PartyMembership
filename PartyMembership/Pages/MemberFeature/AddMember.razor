@page "/AddMember"
@using Models
@inject Services.MemberService _memberService
@inject Services.PartyService _partyService;
@inject NavigationManager _navigationManager

<h3>AddMember</h3>

<EditForm Model="@member" OnValidSubmit="@CreateMember">
    <DataAnnotationsValidator />
    @*<ValidationSummary />*@
    <div>
        <label>First Name</label>
        <InputText id="firstname" class="form-control" @bind-Value="member.FirstName" />
        <ValidationMessage For="@(()=>member.FirstName)" />
    </div>
    <div>
        <label>Last Name</label>
        <InputText id="lastname" class="form-control" @bind-Value="member.LastName" />
        <ValidationMessage For="@(()=>member.LastName)"/>
    </div>
    <div>
        <label>Dob</label>
        <InputDate id="dob" class="form-control" @bind-Value="member.DateOfBirth" />
        <ValidationMessage For="@(()=>member.DateOfBirth)" />
    </div>

    <div>
        <label>Email</label>
        <InputText id="email" class="form-control" @bind-Value="member.Email" />
        <ValidationMessage For="@(()=>member.Email)" />
    </div>

    <div>
        <label>Gender</label>
        <InputSelect id="gender" class="form-control" @bind-Value="GenderId">
            <option value="0">Select</option>
            @foreach (var gender in genders)
            {
                <option value="@gender.GenderId">@gender.Label</option>
            }
        </InputSelect>
        <ValidationMessage For="@(()=>member.Gender)" />
    </div>

    <div>
        <label>Party</label>
        <InputSelect id="party" class="form-control" @bind-Value="PartyId">
            <option value="0">Select</option>
            @foreach (var party in parties)
            {
                <option value="@party.PartyId">@party.Name</option>
            }
        </InputSelect>
        <ValidationMessage For="@(()=>member.Party)" />
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Save</button>
                <input type="button" class="btn btn-secondary" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>

</EditForm>


@code {
    List<Gender> genders;
    List<Party> parties;
    Member member = new Member();
    string GenderId { get; set; }
    string PartyId { get; set; }


    protected override void OnInitialized()
    {
        GenderId = member.GenderId.ToString();
        PartyId = member.PartyId.ToString();

        genders =  _memberService.GetAllGenders();
        parties =   _partyService.GetAllParties();
    }


    private async Task CreateMember()
    {
        member.GenderId = int.Parse(GenderId);
        member.PartyId = int.Parse(PartyId);

        await _memberService.AddMemberAsync(member);

        _navigationManager.NavigateTo("Members");
    }

    void Cancel()
    {
        _navigationManager.NavigateTo("Members");
    }

}
